{% extends 'administration/admin.html.twig' %}

{% block admin_content %}
    <div class="card mb-3" id="tagsList">
        <div class="card-header border-light bg-white text-right">
            <div class="form-inline">
                <form id="collectionForm" class="form-inline col-8" action="{{ baseUrl }}/admin/tags">
                    <label for="projectId">Project</label>
                    <select id="projectId" name="projectId" class="form-control form-control-sm selectpicker ml-3" data-live-search="true">
                        {% for project in projects %}
                            <option value="{{ project.id }}" {{ project.id == projectId ? 'selected' }} {{ project.collection is null ?"disabled" }}>
                                {{ project.name }}{{ project.collection_id }}{{ project.collection is null ?" (No Data)" }}
                            </option>
                        {% endfor %}
                    </select>
                    <label for="colId" class="ml-3">Collection</label>
                    <select id="colId" name="colId" class="form-control form-control-sm selectpicker ml-3" data-live-search="true">
                        {% for collection in collections %}
                            <option value="{{ collection.id }}" {{ collection.id == colId ? 'selected' }}>
                                {{ collection.name }}
                            </option>
                        {% endfor %}
                    </select>
                    <label for="recordingId" class="ml-3">Recording</label>
                    <select id="recordingId" name="recordingId" class="form-control form-control-sm selectpicker ml-3" data-live-search="true">
                        <option></option>
                        {% for recording in recordings %}
                            <option value="{{ recording.recording_id }}" {{ recording.recording_id == recordingId ? 'selected' }}>
                                {{ recording.name }}
                            </option>
                        {% endfor %}
                    </select>
                </form>
                <div class="col-4 form-inline justify-content-end">
                    <label class="mr-2">Search:</label>
                    <input class="form-control-sm" id="search">
                </div>
            </div>
            <button id="viewing" name="table-btn" class="btn btn-outline-primary btn-sm mt-2" type="button" data-target="#viewing" disabled>
                <i class="fas fa-eye"></i>
                View
            </button>
            <button id="deletion" name="table-btn" class="btn btn-outline-primary btn-sm mt-2" type="button" data-target="#deletion" disabled>
                <i class="fas fa-trash"></i>
                Delete
            </button>
            <button id="tagsExport" class="btn btn-outline-primary btn-sm mt-2" type="button" data-target="#tagsExport" aria-expanded="false" aria-controls="tagsExport">
                <i class="fa fa-file-csv"></i>
                Save all as CSV
            </button>
        </div>
        <table id="tagsTable" style="display:none;white-space: nowrap;">
            <thead class="table-borderless">
            <tr style="font-size: .875rem;">
                <th>
                    <input type="checkbox" class="js-all-checkbox" name="check-all" id="check-all">
                </th>
                <th>#</th>
                <th>Soundscape Component</th>
                <th>Sound Type</th>
                <th>Recording</th>
                <th>User</th>
                <th>Creator Type</th>
                <th>Confidence</th>
                <th>Time Start</th>
                <th>Time End</th>
                <th>Min Freq</th>
                <th>Max Freq</th>
                <th>Species</th>
                <th>Uncertain</th>
                <th>Call Distance</th>
                <th>Distance Not Estimable</th>
                <th>Individuals</th>
                <th>Animal Sound Type</th>
                <th>Reference Call</th>
                <th>Comments</th>
                <th style="width: 120px">Creation Date (UTC)</th>
            </tr>
            </thead>
            <tbody class="form-control-sm js-tag-list"></tbody>
        </table>
    </div>
    <div class="modal fade" id="modal-div" tabindex="-1" role="dialog">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title text-danger">Warning</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body ml-3">
                    <div>
                        <div class="form-group">
                            <input id="delete_id" type="hidden">
                            <label id="delete_info"></label>
                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    <button id="js-close-button" type="button" class="btn btn-outline-secondary" data-dismiss="modal" aria-label="Close">
                        <i class="fas fa-times"></i>
                        Close
                    </button>
                    <button id="js-delete-button" type="button" class="btn btn-outline-danger">
                        <i class="fas fa-trash-alt"></i>
                        Delete
                    </button>
                </div>
            </div>
        </div>
    </div>
{% endblock %}
{% block header %}
    {{ parent() }}
    <script>
        $(document).ready(function () {
            $('#tagsTable').show()
            let url
            let table = $('#tagsTable').DataTable({
                "processing": true,
                "serverSide": true,
                "ajax": {
                    "url": '{{ baseUrl }}/admin/tagMgr/getListByPage/{{ colId }}/{{ recordingId }}',
                    "type": 'POST',
                    "error": function (xhr, error, thrown) {
                        if (xhr.status == 400 || xhr.status == 404 || xhr.status == 500) {
                            location.reload();
                        }
                    }
                },
                "dom": 'lrtip',
                "stateSave": true,
                "StateDuration": -1,
                "order": [[1, 'asc']],
                "columnDefs": [
                    {
                        "orderable": false,
                        "targets": [0]
                    },
                    {
                        "className": "dt-center",
                        "targets": [0, 13, 15, 18],
                    },
                ],
                "bAutoWidth": false,
                "scrollX": true,
            });
            if (table.state.loaded()) {
                $('#search').val(table.state.loaded().search.search);
            }
            $('#search').on('input', () => {
                table.search($('#search').val()).draw();
            });
        });

        document.addEventListener("DOMContentLoaded", function () {
            var arr ={{ animal_sound_types|json_encode|raw }};
            var soundTypes ={{ soundTypes|json_encode|raw }};
            'use strict';
            $(document).on('click', '#tagsExport', function () {
                window.location.href = '{{ baseUrl }}/api/admin/tagMgr/export/{{ colId }}/{{ recordingId }}';
            });

            $('#js-delete-button').click(function (e) {
                let id = [];
                $('.js-checkbox:checked').each(function () {
                    id.push($(this).data('id'));
                });
                let data = {'id': id};
                postRequest('{{ baseUrl }}/api/admin/tagMgr/delete', data, false, false, function () {
                    location.reload();
                });
            });
            $('#tagsTable tbody').on('change', 'select[name=soundscape_component]', function () {
                let id = $(this).attr('id').split('_')[2]
                let index = 0
                if ($("#soundscape_component_" + id).find("option:selected").text() == 'biophony') {
                    $(".soundscape_component_" + id).removeAttr("hidden");
                } else {
                    $(".soundscape_component_" + id).attr("hidden", true);
                }
                $('#sound_id' + id).empty()
                for (var key in soundTypes) {
                    if (soundTypes[key]['soundscape_component'] == $("#soundscape_component_" + id).find("option:selected").text()) {
                        if (index == 0) {
                            $('#sound_id' + id).append("<option value='" + soundTypes[key]['sound_id'] + "' selected>" + soundTypes[key]['sound_type'] + "</option>");

                        } else {
                            $('#sound_id' + id).append("<option value='" + soundTypes[key]['sound_id'] + "'>" + soundTypes[key]['sound_type'] + "</option>");
                        }
                    }
                    index++
                }
            });
            $(".js-tag-list").on('change', 'input, select, textarea', function () {
                if ($(this)[0].className == 'js-checkbox') {
                    return
                }
                saveFormList($(this), 'api/admin/tagMgr/save');
            });
            $('#projectId').change(function () {
                $('#colId').val("")
                $('#recordingId').val("")
                $("#collectionForm").submit();
            });
            $('#colId').change(function () {
                $('#recordingId').val("")
                $("#collectionForm").submit();
            });
            $('#recordingId').change(function () {
                $("#collectionForm").submit();
            });
            $('#tagsTable tbody').on('click', 'input[name=distance_not_estimable]', function () {
                var id = $(this).attr('id').split('_')[3]
                let callDistance = $('#sound_distance_m' + id);
                if ($(this).is(':checked')) {
                    callDistance.val(null);
                    callDistance.prop('readonly', true);
                    return;
                }
                callDistance.prop('readonly', false);
            });
            $('#tagsTable tbody').on('mouseenter', 'select[name=animal_sound_type]', function () {
                if ($(this)[0].options.length < 2) {
                    var id = $(this).attr('id').split('e')[1]
                    if ($(this).val() > 0) {
                        $("#animal_sound_type" + id).prepend("<option value='0'></option>")
                    }
                    var data = arr[$("#taxon_class" + id).val() + $("#taxon_order" + id).val()]
                    for (var key in data) {
                        if ($(this).val() != data[key][0]) {
                            $("#animal_sound_type" + id).append("<option value=" + data[key][0] + ">" + data[key][1] + "</option>");
                        }
                    }
                }
            });
            $('button[name="table-btn"][data-target="#viewing"]').click(function (e) {
                $('.js-checkbox:checked').each(function () {
                    window.open('{{ baseUrl }}/recording/show/' + $(this).data('recording-id') + '?t_min=' + $(this).data('tmin') + '&t_max=' + $(this).data('tmax') + '&f_min=' + $(this).data('fmin') + '&f_max=' + $(this).data('fmax'), '_blank');
                });
                e.preventDefault();
            })

            $('button[name="table-btn"][data-target="#deletion"]').click(function (e) {
                if ($('.js-checkbox:checked').length > 1) {
                    $('#delete_info').html("Are you sure you want to delete these <b class=\"text-danger\" >" + $('.js-checkbox:checked').length + "</b> entries?")
                } else {
                    $('#delete_info').html("Are you sure you want to delete this entry?")
                }
                $("#modal-div").modal('show');
            })
        });
    </script>
{% endblock %}
