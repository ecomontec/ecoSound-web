<div class="row">
    <div class="loading-grey"></div>
    <div id="player_box" class="col-9">
        <div id="myCanvas" class="canvas">
            {% include 'recording/player/tagBoxes.html.twig' with {'tags': player.tags, 'show_tags': player.isShowTags} %}
            <div id="playerCursor" class="player-line"></div>
            <img class="player_img" src="{{ player.imageFilePath }}" id="cropbox"/>
        </div>
        <div class="row no-gutters mt-1">
            <div class="col-auto mr-auto form-inline">
                <button id="play" class="btn btn-link btn-sm" data-playing="false" role="switch" aria-checked="false">
                    <i class="fas fa-play"></i>
                </button>
                <div class="dropdown" id="play-dropdown">
                    <button id="dropdown" class="btn btn-link text-dark" data-playing="false" role="switch" aria-checked="false" data-toggle="dropdown">
                        <i class="fa-solid fa-caret-down"></i>
                    </button>
                    <div class="dropdown-menu" id="dropdown-menu-play" style="min-width: 30px">
                        <button id="continue-playback" class="btn btn-link {{ player.isContinuousPlay ? 'active':'' }}" title="Continue playback beyond current frame">
                            <i class="continue-playback"></i>
                        </button>
                    </div>
                </div>
                <div>
                    <button id="play_hidden" style="display: none"></button>
                    <button id="stop" class="btn btn-link">
                        <i class="fas fa-stop"></i>
                    </button>
                    <h8>
                        <span id="time_sec_div">{{ player.minTime > 0 ? player.minTime|round: 0 }}</span>
                        s
                    </h8>
                </div>
            </div>
            <div class="col-auto">
                <form class="form-inline" id="recordingForm" action="{{ baseUrl }}/recording/show/{{ player.recording.recording_id }}" method="post">
                    <input type="hidden" name="channel" value="{{ player.channel }}">
                    <input type="hidden" name="channel_num" value="{{ player.recording.channel_num }}">
                    <input type='hidden' name='showTags' value="{{ player.showTags }}">
                    <input type='hidden' name='estimateDistID' value="{{ player.estimateDistID }}">
                    <input type="hidden" name="collection_id" value="{{ player.recording.col_id }}">
                    <input type="hidden" name="recording_id" value="{{ player.recording.recording_id }}">
                    <input type="hidden" name="recording_name" value="{{ player.recording.name }}">
                    <input type="hidden" name="filename" value="{{ player.recording.filename }}">
                    <input type="hidden" name="recording_directory" value="{{ player.recording.directory }}">
                    <input type="hidden" name="specWidth" value="{{ player.spectrogramWidth }}">
                    <input type="hidden" name="specHeight" value="{{ player.spectrogramHeight }}">
                    <input type="hidden" name="minTimeView" value="{{ player.minTime }}">
                    <input type="hidden" name="maxTimeView" value="{{ player.maxTime }}">
                    <input type="hidden" name="minFreqView" value="{{ player.minFrequency }}">
                    <input type="hidden" name="maxFreqView" value="{{ player.maxFrequency }}">
                    <input type="hidden" name="open" id="open" value="{{ open }}">
                    <input type="hidden" name="modalX" id="modalX" value="{{ modalX }}">
                    <input type="hidden" name="modalY" id="modalY" value="{{ modalY }}">
                    <input type="hidden" name="lat" id="lat" value="{{ player.recording.latitude_WGS84_dd_dddd }}">
                    <input type="hidden" name="lon" id="lon" value="{{ player.recording.longitude_WGS84_dd_dddd }}">
                    <input type="hidden" name="file_date" id="file_date" value="{{ player.recording.file_date }}">
                    {% include 'recording/player/timeBoxes.html.twig' with {
                        'minTime': player.minTime,
                        'maxTime': player.maxTime,
                        'minFrequency': player.minFrequency,
                        'maxFrequency': player.maxFrequency,
                    } only %}

                    <div class="btn-group dark-buttons" role="group">
                        <a href="#" id="exportCoordinates" class="btn btn-link" title="Export coordinates to clipboard">
                            <i class="fas fa-clipboard"></i>
                        </a>
                        <a href="{{ baseUrl }}/recording/maad" id="exportMaxF" class="btn btn-link" title="Export frequency of maximum energy to clipboard">
                            <i class="arrow-peak"></i>
                        </a>
                        <button id="zoom-submit" class="btn btn-link" type="button" title="Zoom" disabled>
                            <i class="fas fa-search-plus"></i>
                        </button>
                    </div>
                    <div class="btn-group btn-group-toggle dark-buttons" data-toggle="buttons">
                        <label for="continuous-play" id="btn-playback" class="btn btn-link {{ player.isContinuousPlay ? 'active':'' }}" title="Continuous playback" hidden>
                            <input type="checkbox" id="continuous-play" name="continuous_play" autocomplete="off" {{ player.isContinuousPlay ? 'checked':'' }}>
                            <i class="fas fa-redo-alt"></i>
                        </label>
                        <label for="filter" class="btn btn-link" title="Filter">
                            <input type="checkbox" id="filter" name="filter">
                            <i class="fas fa-filter"></i>
                        </label>
                    </div>
                </form>
            </div>
        </div>
    </div>
    {% if isUserLogged %}
        <div class="col-3 z-1000">
            <div>
                <label class="col-form-label">
                    <strong>My Label:</strong>
                </label>
            </div>
            <div class="mb-2">
                <form id="reclabelform" novalidate>
                    <input type="hidden" name="recording_id" value="{{ player.recording.recording_id }}"/>
                    <input type="hidden" name="user_id" value="{{ user_id }}"/>
                    <select id="reclabel" name="label_id" required>
                        {% for lbl in labels %}
                            <option value="{{ lbl.id }}" {{ lbl.id == myLabel.id ? 'selected' }}>{{ lbl.name }}</option>
                        {% endfor %}
                    </select>
                    <a href="{{ baseUrl }}/recording/addLabel" class="js-open-modal" title="add custom label">
                        <i class="fas fa-plus pr-1"></i>
                    </a>
                </form>
            </div>
            <div>
                <a href="#" class="js-open-maad-modal">
                    <i class="svg-sum mt-3"></i>
                    <strong>Alpha acoustic indices</strong>
                </a>
            </div>
            <div>
                <a href="#" class="js-open-tf-modal">
                    <i class="svg-model mt-3"></i>
                    <strong>AI models</strong>
                </a>
            </div>
        </div>
        <div class="modal fade" id="modal-maad" tabindex="-1" role="dialog">
            <div class="modal-dialog" role="document">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title maad-title">Acoustic Index Analysis</h5>
                        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                            <span aria-hidden="true">&times;</span>
                        </button>
                    </div>
                    <div class="modal-body ml-3">
                        <div>
                            <div class="form-group">
                                <select id="maad" name="maad_id" autocomplete="off" class="form-control form-control-sm col-6 mb-3" required>
                                    {% for index in indexs %}
                                        <option value="{{ index.indexId }}">{{ index.name }}</option>
                                    {% endfor %}
                                </select>
                                <div class="col-form-label">
                                    <strong>Description:</strong>
                                    <a class="col-form-label" href="{{ indexs[0].URL }}" target="_blank" title="Documentation"> <i class="fa fa-book"></i></a>
                                    <div class="col-form-label-sm">{{ indexs[0].description }}</div>
                                </div>
                                {% if indexs[0].param is not null and indexs[0].param != '' %}
                                    {% for p in indexs[0].param|split('!') %}
                                        <div class="form-inline">
                                            <label class="ml-1 col-form-label-sm" for="{{ p|split('|')[0] }}">{{ p|split('|')[0] }}</label>
                                        </div>
                                        <div class="form-group form-inline">
                                            <input id="{{ p|split('|')[0] }}" name="{{ p|split('|')[0] }}" class="form-control form-control-sm param" type="text">
                                            <label class="ml-2 col-form-label-sm">default: {{ p|split('|')[1] }}</label>
                                        </div>
                                    {% endfor %}
                                {% endif %}
                            </div>
                        </div>
                    </div>
                    <div class="modal-footer">
                        <button id="js-close-button" type="button" class="btn btn-outline-secondary" data-dismiss="modal" aria-label="Close">
                            <i class="fas fa-times"></i>
                            Close
                        </button>
                        <a href="{{ baseUrl }}/recording/maad" class="js-maad-modal btn btn-outline-primary">
                            <i class="fa-solid fa-check"></i>
                            Compute
                        </a>
                    </div>
                </div>
            </div>
        </div>
        <div class="modal fade" id="modal-tf" tabindex="-1" role="dialog">
            <div class="modal-dialog" role="document">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title maad-title">Classifiers</h5>
                        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                            <span aria-hidden="true">&times;</span>
                        </button>
                    </div>
                    <div class="modal-body ml-3">
                        <div>
                            <div class="form-group">
                                <select id="tf" name="tf_id" autocomplete="off" class="form-control form-control-sm col-6 mb-3" required>
                                    {% for model in models %}
                                        <option value="{{ model.tf_model_id }}">{{ model.name }}</option>
                                    {% endfor %}
                                </select>
                            </div>
                        </div>
                    </div>
                    <div class="modal-footer">
                        <button id="js-close-button" type="button" class="btn btn-outline-secondary" data-dismiss="modal" aria-label="Close">
                            <i class="fas fa-times"></i>
                            Close
                        </button>
                        <a id='model-btn' class="js-tf-modal btn btn-outline-primary">
                            <i class="fa-solid fa-check"></i>
                            Submit
                        </a>
                    </div>
                </div>
            </div>
        </div>
        <script>
            $(".loading").css("opacity", "0");
            $(document).ready(function () {
                $('#tf').change(function () {
                    let html = ''
                    $(this).siblings().remove();
                    {% for model in models %}
                    if ($(this).val() == '{{ model.tf_model_id }}') {
                        $('#model-btn').attr("href", "{{ baseUrl }}/recording/{{ model.name|replace({'-': ''}) }}");
                        html = html + '<div class="col-form-label">' +
                            '<strong>Description:</strong>' +
                            '<a class="col-form-label" href="{{ model.source_URL }}" target="_blank" title="Documentation"> <i class="fa fa-book"></i></a>' +
                            '<div class="col-form-label-sm">{{ model.description }}</div></div>'
                        let data = '{{ model.parameter }}'.split('$').map(item => item.split('@'));
                        $.each(data, function (index, value) {
                            html = html + '<div class="form-inline">' +
                                '<label class="ml-1 col-form-label-sm" for="' + value[0] + '">' + value[0] + '</label></div>' +
                                '<div class="form-group form-inline">' +
                                '<input id="' + value[0] + '" name="' + value[0] + '" class="form-control form-control-sm" type="text">' +
                                '<label class="ml-2 col-form-label-sm">' + value[1] + '</label></div>'
                        })
                        $(this).after(html)
                    }
                    {% endfor %}
                })
                $("#tf").change();
            });

            $("#maad").change(function () {
                $.ajax({
                    url: "{{ baseUrl }}/recording/getMaadlabel/" + $("#maad").val(),
                    success: function (data) {
                        $("#maad").nextAll().remove()
                        if (data) {
                            $("#maad").after(data)
                        }
                    },
                })
            })
            $('.js-open-maad-modal').click(function () {
                $('#modal-maad').modal('show');
            })
            $('.js-open-tf-modal').click(function () {
                $('#modal-tf').modal('show');
            })
            $(".js-maad-modal").click(function (e) {
                let data = []
                let param = ''
                $('.param').each(function () {
                    if ($(this).val() != '') {
                        param = param + $(this).attr('id') + '?' + $(this).val() + '@'
                    }
                })
                data = {
                    'min_time': $('input[name=minTimeView]').val(),
                    'max_time': $('input[name=maxTimeView]').val(),
                    'min_frequency': $('input[name=minFreqView]').val(),
                    'max_frequency': $('input[name=maxFreqView]').val(),
                    'collection_id': $('input[name=collection_id]').val(),
                    'recording_id': $('input[name=recording_id]').val(),
                    'filename': soundFilePath,
                    'index_id': $('#maad').val(),
                    'index': $('#maad').find("option:selected").text(),
                    'channel_num': $('input[name=channel_num]').val(),
                    'channel': $('input[name=channel]').val(),
                    'param': param,
                };
                $('#modal-maad').modal('hide');
                requestModal(this.href, data, true);
                e.preventDefault();
            });
            $(".js-tf-modal").click(function (e) {
                let data = []
                if ($('#tf').val() == 1) {
                    if ($('#lat').val() == "" || $('#lon').val() == "" || $('#file_date').val() == "") {
                        if (!confirm("Your recordings have not been assigned to geographic locations and date-times. BirdNET will produce unreliable results!")) {
                            e.preventDefault();
                            return
                        }
                    }
                }
                $('.loading-grey').toggle();
                if ($('#tf').val() == 1) {
                    data = {
                        'collection_id': $('input[name=collection_id]').val(),
                        'recording_id': $('input[name=recording_id]').val(),
                        'filename': $('input[name=filename]').val(),
                        'creator_type': $("#tf option:selected").text(),
                        'recording_directory': $('input[name=recording_directory]').val(),
                        'lat': $("#lat").val(),
                        'lon': $("#lon").val(),
                        'file_date': $("#file_date").val(),
                        'sensitivity': $("#sensitivity").val(),
                        'min_conf': $("#min_conf").val(),
                        'overlap': $("#overlap").val(),
                        'sf_thresh': $("#sf_thresh").val(),
                        'temp': soundFilePath,
                        'max_freq': fileFreqMax,
                        'user_id': '{{ user_id }}',
                    };
                } else if ($('#tf').val() == 2) {
                    data = {
                        'collection_id': $('input[name=collection_id]').val(),
                        'recording_id': $('input[name=recording_id]').val(),
                        'filename': $('input[name=filename]').val(),
                        'creator_type': $("#tf option:selected").text(),
                        'recording_directory': $('input[name=recording_directory]').val(),
                        'file_date': $("#file_date").val(),
                        'detection_threshold': $("#detection_threshold").val(),
                        'temp': soundFilePath,
                        'user_id': '{{ user_id }}',
                    };
                }
                data = jsToFormData(data)
                $.ajax({
                    type: 'POST',
                    url: this.href,
                    data: data,
                    dataType: 'json',
                    processData: false,
                    contentType: false,
                })
                    .done(function (result) {
                        alert(result.message)
                        if (result.message.indexOf('found 0 detections.') === -1) {
                            location.reload()
                        }
                        $('.loading-grey').toggle();
                    })
                    .fail(function (response) {
                        $('.loading-grey').toggle();
                        if (!response.responseJSON) {
                            showAlert('Error ' + response.message);
                            return;
                        }
                        showAlert(response.responseJSON.message);
                    })
                e.preventDefault();
            });
        </script>
    {% endif %}
    {% if open!=0 %}
        <script>
            $('#modal-div').prop('data-backdrop', false)
            $().ready(function () {
                $("#tag_{{ open }}").click()
                $('#open').val(0)
                $('.loading-grey').toggle();
            })
        </script>
    {% endif %}
    {# {% include 'recording/player/frequencyScale.html.twig' %} #}
</div>
